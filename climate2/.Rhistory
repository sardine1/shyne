shiny::runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
shiny::runApp('D:/shiny/climate2')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate2')
runApp('D:/shiny/climate2')
runApp('D:/shiny/climate2')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
runApp('D:/shiny/climate')
shiny::runApp('D:/shiny/climate2')
runApp('D:/shiny/climate2')
runApp('D:/shiny/climate2')
runApp('D:/shiny/climate2')
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(dplyr)
library(echarts4r)
library(echarts4r.maps)
runApp()
install.packages("remotes")
?echarts4r.maps
??echarts4r.maps
my_df = nearest_stations_ogimet(country = "Russia",
date = Sys.Date(),
point = c(30, 80),
no_of_stations = 300)
my_df %>%
filter(country == "Russia") %>%
mutate(val = runif(n(), 1, 3)) %>%
e_charts(lon) %>%
em_map("Russia") %>%
e_geo(map = "Russia") %>%
e_scatter(lat, val, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
filter(country == "Russia") %>%
mutate(val = runif(n(), 1, 3)) %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lat, val, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
mutate(val = runif(n(), 1, 3)) %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lat, val, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
mutate(val = runif(n(), 1, 3)) %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lat, val, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
mutate(val = runif(n(), 1, 3)) %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
mutate(val = runif(n(), 1, 3)) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
mutate(val = runif(n(), 1, 3)) %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
remotes::install_github('JohnCoene/echarts4r.maps')
my_df %>%
mutate(val = runif(n(), 1, 3)) %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
mutate(val = runif(n(), 1, 3)) %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lat, val, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
e_charts(lon) %>%
em_map("Russia") %>%
e_map(y, map = "Russia") %>%
e_visual_map(lat)
my_df %>%
e_charts(lon) %>%
e_map(y, map = "Russia") %>%
e_visual_map(lat)
my_df %>%
e_charts(lon) %>%
e_map(lat, map = "Russia") %>%
e_visual_map(lat)
my_df = nearest_stations_ogimet(country = "Russia",
date = Sys.Date(),
point = c(input$from, input$to),
no_of_stations = 300)
qmplot(lon, lat, data = my_df, colour = I('red'), size = I(2), darken = .3)
my_df
my_df %>%
e_map(lat, map = "Russia") %>%
e_visual_map(lat)
my_df %>%
e_map(lat, lon)
my_df %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df
library(dplyr)
vis <- my_df %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
install.packages("remotes")
remotes::install_github('JohnCoene/echarts4r.maps')
install.packages("remotes")
vis <- my_df %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations")
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations", "Stations")
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3)
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE)
library(echarts4r)
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE)
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE) %>%
e_visual_map(min = 1, max = 3) %>%
e_title("Russian's stations", "Stations")
my_df %>%
e_charts(lon) %>%
e_geo(map = "Russia") %>%
e_scatter(lon, lat, coord_system = "geo", scale = NULL, legend = FALSE)
g <- echartr(NULL, type='map_russia') %>%
addMP(data=my_df, symbolSize=5, itemStyle=list(
normal=list(borderColor='#87cefa', borderWidth=1,
label=list(show=FALSE)),
emphasis=list(borderColor='#1e90ff', borderWidth=5,
label=list(show=FALSE))
)) %>%
addMP(series='Top 5',
data=my_df[1:3],
effect=list(show=TRUE)
) %>%
setDataRange(splitNumber=0, valueRange=c(0, 100), color=c(
'maroon', 'purple', 'red', 'orange', 'yellow', 'lightgreen'))
g <- echartr(NULL, type='map_russia') %>%
addMP(data=my_df, symbolSize=5, itemStyle=list(
normal=list(borderColor='#87cefa', borderWidth=1,
label=list(show=FALSE)),
emphasis=list(borderColor='#1e90ff', borderWidth=5,
label=list(show=FALSE))
)) %>%
addMP(series='Top 5',
data=my_df[1:3],
effect=list(show=TRUE)
)
g <- echartr(NULL, type='map_russia') %>%
addMP(data=my_df, symbolSize=5, itemStyle=list(
normal=list(borderColor='#87cefa', borderWidth=1,
label=list(show=FALSE)),
emphasis=list(borderColor='#1e90ff', borderWidth=5,
label=list(show=FALSE))
))
str(chinapm25)
library(recharts)
meteo_map <- plot_geo(my_df, lat = ~lat, lon = ~lon)
library(plotly)
meteo_map <- plot_geo(my_df, lat = ~lat, lon = ~lon)
meteo_map <- meteo_map %>% add_markers(
text = ~paste(paste("Name:", station_names),
paste("ID:", wmo_id), , sep = "<br />"),
color = ~mass, symbol = I("circle-dot"), size = I(8), hoverinfo = "text"
)
meteo_map <- meteo_map %>% add_markers(
text = ~paste(paste("Name:", station_names),
paste("ID:", wmo_id), sep = "<br />"),
color = ~mass, symbol = I("circle-dot"), size = I(8), hoverinfo = "text"
)
meteo_map
meteo_map <- meteo_map %>% add_markers(
text = ~paste(paste("Name:", my_df[1]),
paste("ID:", my_df[0]), sep = "<br />"),
color = ~mass, symbol = I("circle-dot"), size = I(8), hoverinfo = "text"
)
meteo_map
meteo_map <- meteo_map %>% add_markers(
text = ~paste(paste("Name:", my_df[1]),
paste("ID:", my_df[0]), sep = "<br />"),
color = ~mass, symbol = I("circle-dot"), size = I(8), hoverinfo = "text"
)
meteo_map
meteo_map <- meteo_map %>% add_markers(
text = ~paste(paste("Name:", my_df[1]),
paste("ID:", my_df[0]), sep = "<br />"),
color = ~mass, symbol = I("circle-dot"), size = I(8), hoverinfo = "text"
)
meteo_map
meteo_map <- plot_geo(my_df, lat = ~lat, lon = ~lon)
meteo_map
meteo_map <- plot_geo(my_df, locationmode = 'Russia', lat = ~lat, lon = ~lon)
meteo_map <- plot_geo(my_df, locationmode = 'country names', lat = ~lat, lon = ~lon)
meteo_map
echartr(NULL, type='map_china') %>% setTitle('China Map')
could not find function "setTitle"
library(recharts)
install.packages(
'recharts',
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
)
time1 = as.POSIXct(2022-05-01)
time1 = as.POSIXct.numeric(2022-05-01)
time1 = as.POSIXct("2022-05-01")
time1 = as.POSIXct("2022-05-21")
time1 = as.POSIXct("2022-05-01")
time2 = as.POSIXct("2022-05-21")
if ( time1 == time2){
print("Equal times")
}else{
if(time1< time2){
print ("Time1 smaller")
}else{
print ("Time2 smaller")
}
}
shiny::runApp()
runApp()
runApp()
if (time_start < time1_end){
time_start = time1_end
if(time_end < time1_end){
time_end = "2015-12-31"
}
}else if (time_end < time1_end){
time_end = time1_end
}
runApp()
runApp()
